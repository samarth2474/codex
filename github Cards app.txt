//github profiles= gaearon, sophiebits, sebmarkbage, tj, bvaughn 
/*
const testData = [
    {name: "Dan Abramov", avatar_url: "https://avatars0.githubusercontent.com/u/810438?v=4", company: "@facebook"},
     {name: "Sophie Alpert", avatar_url: "https://avatars2.githubusercontent.com/u/6820?v=4", company: "Humu"},
  		{name: "Sebastian MarkbÃ¥ge", avatar_url: "https://avatars2.githubusercontent.com/u/63648?v=4", company: "Facebook"},
];
*/
const CardList =(props) => (
  <div>
    {props.profiles.map(profile=><Card key ={profile.id} {...profile}/>)}
  </div>
);

class Card extends React.Component {
  //Each React Component Should have render()
  render() {
    const profile = this.props;
    return (
      <div className = 'github-profile'>
        <img src = {profile.avatar_url} />
        <div className = 'info'>
          <div className = 'Name' style = {{display:'inline block'}}>{profile.name}</div>
          <div className = 'Company'>{profile.company}</div>
        </div>
      </div>
   );   
  };
};

class Form extends React.Component {
  //create state object to get  profile
  state = {userName: ''};
  //preventDefault() helps in inputting text without having to reload the page
  handleSubmit = async (event) => {
    event.preventDefault();
    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);
    this.props.onSubmit(resp.data);
    this.setState({userName: ''});
  };
  
  //React call to create reference
  //userNameInput = React.createRef()
  render() {
    return (
      //using onSubmit prop to submit the form
      //ref{}- React uses it to get elements stored in memory
    <form onSubmit ={this.handleSubmit}>
      <input 
        type ='text' 
        placeholder = 'GitHub username'   
        value = {this.state.userName}
        onChange = {event => this.setState({userName: event.target.value})}
        required/>
      <button>Add Card</button>
    </form>
    )
  };
};
//App is the parent class
class App extends React.Component {
  state = {
    profiles: [],
  };
  addNewProfile =(profileData)=>{
    this.setState(prevState =>({profiles: [...prevState.profiles,profileData],
    }))
  }
  render() {
    return (
      <div>
        <div className = 'header'>{this.props.title}</div>
        <Form onSubmit ={this.addNewProfile}/>
        <CardList profiles = {this.state.profiles} />
        
      </div>  
    
    
    )
  };
};
          
ReactDOM.render (
  //App is given the title prop
  <App title = 'The GitHub Cards App' />,
  document.getElementById('mountNode'),
);